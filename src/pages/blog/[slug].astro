---
import ResponsiveNav from "../../components/ResponsiveNav.astro";
import { getBlogPostBySlug } from "../../lib/blog";
import { getPublicAuthUser } from "../../lib/publicAuth";
import "../../styles/global.css";

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect("/404");
}

const post = await getBlogPostBySlug(slug);

if (!post) {
  return Astro.redirect("/404");
}

// Obtener usuario autenticado
const currentUser = getPublicAuthUser(Astro.request);

// Función para formatear fecha
function formatDate(date: Date): string {
  return new Date(date).toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}

// Función para obtener color de categoría
function getCategoryColor(category: string): string {
  switch (category) {
    case 'news':
      return 'bg-blue-100 text-blue-800';
    case 'analysis':
      return 'bg-purple-100 text-purple-800';
    case 'interview':
      return 'bg-green-100 text-green-800';
    case 'editorial':
      return 'bg-orange-100 text-orange-800';
    default:
      return 'bg-gray-100 text-gray-800';
  }
}

// Función para obtener icono de categoría
function getCategoryIcon(category: string): string {
  switch (category) {
    case 'news':
      return '📰';
    case 'analysis':
      return '🔍';
    case 'interview':
      return '🎤';
    case 'editorial':
      return '✍️';
    default:
      return '📝';
  }
}

// Función para obtener nombre de categoría
function getCategoryName(category: string): string {
  switch (category) {
    case 'news':
      return 'Noticias';
    case 'analysis':
      return 'Análisis';
    case 'interview':
      return 'Entrevistas';
    case 'editorial':
      return 'Editorial';
    default:
      return 'Artículo';
  }
}
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{post.title} | SeriesGuide Blog</title>
    <meta name="description" content={post.excerpt} />
  </head>
  <body class="bg-gray-50">
    <!-- Navigation -->
    <ResponsiveNav />

    <main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <!-- Back to Blog -->
      <div class="mb-8">
        <a
          href="/blog"
          class="inline-flex items-center text-slate-600 hover:text-slate-800 transition-colors"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Volver al Blog
        </a>
      </div>

      <!-- Post Content -->
      <article class="bg-white rounded-xl shadow-lg overflow-hidden">
        {/* Featured Image */}
        {post.featuredImage && (
          <div class="h-64 md:h-80 bg-gradient-to-br from-slate-100 to-slate-200">
            <img
              src={post.featuredImage}
              alt={post.title}
              class="w-full h-full object-cover"
            />
          </div>
        )}

        {/* Content */}
        <div class="p-8">
          {/* Category */}
          <div class="flex items-center gap-2 mb-4">
            <span class={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getCategoryColor(post.category)}`}>
              {getCategoryIcon(post.category)} {getCategoryName(post.category)}
            </span>
          </div>

          {/* Title */}
          <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            {post.title}
          </h1>

          {/* Excerpt */}
          <p class="text-xl text-gray-600 mb-6 leading-relaxed">
            {post.excerpt}
          </p>

          {/* Meta */}
          <div class="flex items-center justify-between text-sm text-gray-500 mb-8 pb-6 border-b border-gray-200">
            <div class="flex items-center gap-3">
              {post.author.avatar ? (
                <img
                  src={post.author.avatar}
                  alt={post.author.name}
                  class="w-10 h-10 rounded-full"
                />
              ) : (
                <div class="w-10 h-10 rounded-full bg-gray-300 flex items-center justify-center">
                  <span class="text-lg">👤</span>
                </div>
              )}
              <div>
                <p class="font-medium text-gray-900">{post.author.name}</p>
                <p class="text-gray-500">
                  {post.publishedAt && formatDate(new Date(post.publishedAt))}
                </p>
              </div>
            </div>
            
            {/* Tags */}
            {post.tags.length > 0 && (
              <div class="flex flex-wrap gap-1">
                {post.tags.map((tag) => (
                  <span class="bg-gray-100 text-gray-600 px-2 py-1 rounded-md text-xs">
                    #{tag}
                  </span>
                ))}
              </div>
            )}
          </div>

          {/* Article Content */}
          <div class="prose prose-lg max-w-none">
            {post.content.split('\n\n').map((paragraph, index) => {
              // Detectar títulos (líneas que empiezan con **)
              if (paragraph.startsWith('**') && paragraph.endsWith('**') && paragraph.length > 4) {
                const title = paragraph.slice(2, -2);
                return (
                  <h2 class="text-2xl font-bold text-gray-800 mt-8 mb-4 first:mt-0">
                    {title}
                  </h2>
                );
              }
              
              // Procesar texto con formato **bold** dentro de párrafos
              const processedText = paragraph.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
              
              // Párrafos regulares
              return (
                <p class="text-gray-700 leading-relaxed mb-4" set:html={processedText}>
                </p>
              );
            })}
          </div>

          {/* Social Sharing */}
          <div class="mt-8 pt-6 border-t border-gray-200">
            <p class="text-sm text-gray-500 mb-4">¿Te gustó este artículo? Compártelo:</p>
            <div class="flex gap-3">
              <button
                onclick={`window.open('https://twitter.com/intent/tweet?text=${encodeURIComponent(post.title)}&url=${encodeURIComponent(Astro.url.href)}', '_blank', 'width=600,height=400')`}
                class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
              >
                🐦 Twitter
              </button>
              <button
                onclick={`window.open('https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(Astro.url.href)}', '_blank', 'width=600,height=400')`}
                class="bg-blue-700 hover:bg-blue-800 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
              >
                📘 Facebook
              </button>
            </div>
          </div>
        </div>
      </article>

      {/* Back to Blog Footer */}
      <div class="mt-8 text-center">
        <a
          href="/blog"
          class="inline-flex items-center bg-slate-600 hover:bg-slate-700 text-white px-6 py-3 rounded-lg font-medium transition-colors"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Volver al Blog
        </a>
      </div>
    </main>
  </body>
</html>
