---
import { protectAdminPage } from "../../lib/adminSecurity";
import { getAnalisisById } from "../../lib/mongo";
import "../../styles/global.css";

// Proteger página de administración
const user = protectAdminPage(Astro.request);

// Obtener ID del análisis desde la URL
const analysisId = Astro.url.searchParams.get('id');

let analysis = null;
let error = '';

if (analysisId) {
  try {
    analysis = await getAnalisisById(analysisId);
    if (!analysis) {
      error = 'Análisis no encontrado';
    }
  } catch (err) {
    error = 'Error cargando análisis';
    console.error('Error loading analysis:', err);
  }
} else {
  error = 'ID de análisis no proporcionado';
}
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Editar Análisis - Admin SeriesGuide</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body class="bg-gray-900 min-h-screen">
    <div class="container mx-auto px-4 py-8 max-w-4xl">
      <!-- Header -->
      <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8 gap-4">
        <div>
          <h1 class="text-3xl font-bold text-white mb-2">
            {analysis ? `Editar: ${analysis.title}` : 'Error'}
          </h1>
          <p class="text-gray-400">
            {analysis ? 'Modifica el contenido del análisis' : 'No se pudo cargar el análisis'}
          </p>
        </div>
        <div class="flex gap-4">
          <a
            href="/admin/manage-analysis"
            class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
          >
            ← Volver
          </a>
        </div>
      </div>

      {error ? (
        <div class="bg-red-500 text-white p-4 rounded-lg mb-6">
          {error}
        </div>
      ) : analysis ? (
        <div class="bg-gray-800 rounded-lg p-6 border border-gray-700">
          <!-- Formulario de edición -->
          <form id="editAnalysisForm" class="space-y-6">
            <input type="hidden" id="analysisId" value={analysis._id?.toString() || ''} />
            
            <!-- Título -->
            <div>
              <label for="title" class="block text-sm font-medium text-gray-300 mb-2">
                Título del Análisis
              </label>
              <input
                type="text"
                id="title"
                name="title"
                value={analysis.title}
                class="w-full bg-gray-700 text-white rounded-lg px-4 py-3 border border-gray-600 focus:border-blue-500 focus:outline-none"
                required
              />
            </div>

            <!-- Excerpt -->
            <div>
              <label for="excerpt" class="block text-sm font-medium text-gray-300 mb-2">
                Extracto (opcional)
              </label>
              <textarea
                id="excerpt"
                name="excerpt"
                rows="2"
                class="w-full bg-gray-700 text-white rounded-lg px-4 py-3 border border-gray-600 focus:border-blue-500 focus:outline-none"
                placeholder="Breve descripción del análisis..."
              >{analysis.excerpt || ''}</textarea>
            </div>

            <!-- Contenido -->
            <div>
              <label for="content" class="block text-sm font-medium text-gray-300 mb-2">
                Contenido del Análisis
              </label>
              <textarea
                id="content"
                name="content"
                rows="15"
                class="w-full bg-gray-700 text-white rounded-lg px-4 py-3 border border-gray-600 focus:border-blue-500 focus:outline-none font-mono text-sm"
                required
                placeholder="Escribe el contenido del análisis aquí..."
              >{analysis.content}</textarea>
              <p class="text-xs text-gray-400 mt-1">
                Puedes usar **texto** para negritas y *texto* para cursivas.
              </p>
            </div>

            <!-- Configuración -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <!-- Universo -->
              <div>
                <label for="universe" class="block text-sm font-medium text-gray-300 mb-2">
                  Universo
                </label>
                <select
                  id="universe"
                  name="universe"
                  class="w-full bg-gray-700 text-white rounded-lg px-4 py-3 border border-gray-600 focus:border-blue-500 focus:outline-none"
                >
                  <option value="blue" selected={analysis.universe === 'blue'}>
                    Análisis Principal (Azul)
                  </option>
                  <option value="red" selected={analysis.universe === 'red'}>
                    Análisis Alternativo (Morado)
                  </option>
                </select>
              </div>

              <!-- Estado -->
              <div>
                <label for="status" class="block text-sm font-medium text-gray-300 mb-2">
                  Estado
                </label>
                <select
                  id="status"
                  name="status"
                  class="w-full bg-gray-700 text-white rounded-lg px-4 py-3 border border-gray-600 focus:border-blue-500 focus:outline-none"
                >
                  <option value="draft" selected={analysis.status === 'draft'}>
                    Borrador
                  </option>
                  <option value="published" selected={analysis.status === 'published'}>
                    Publicado
                  </option>
                </select>
              </div>

              <!-- Tiempo de lectura -->
              <div>
                <label for="readTime" class="block text-sm font-medium text-gray-300 mb-2">
                  Tiempo de lectura (minutos)
                </label>
                <input
                  type="number"
                  id="readTime"
                  name="readTime"
                  value={analysis.readTime || 5}
                  min="1"
                  max="60"
                  class="w-full bg-gray-700 text-white rounded-lg px-4 py-3 border border-gray-600 focus:border-blue-500 focus:outline-none"
                />
              </div>

              <!-- Autor -->
              <div>
                <label for="authorName" class="block text-sm font-medium text-gray-300 mb-2">
                  Autor
                </label>
                <input
                  type="text"
                  id="authorName"
                  name="authorName"
                  value={analysis.author?.name || 'Admin'}
                  class="w-full bg-gray-700 text-white rounded-lg px-4 py-3 border border-gray-600 focus:border-blue-500 focus:outline-none"
                />
              </div>
            </div>

            <!-- Avatar del autor -->
            <div>
              <label for="authorAvatar" class="block text-sm font-medium text-gray-300 mb-2">
                Avatar del Autor (URL)
              </label>
              <input
                type="url"
                id="authorAvatar"
                name="authorAvatar"
                value={analysis.author?.avatar || ''}
                class="w-full bg-gray-700 text-white rounded-lg px-4 py-3 border border-gray-600 focus:border-blue-500 focus:outline-none"
                placeholder="https://ejemplo.com/avatar.jpg"
              />
              <p class="text-xs text-gray-400 mt-1">
                URL de la imagen del avatar del autor (opcional)
              </p>
            </div>

            <!-- Tags -->
            <div>
              <label for="tags" class="block text-sm font-medium text-gray-300 mb-2">
                Tags (separados por comas)
              </label>
              <input
                type="text"
                id="tags"
                name="tags"
                value={analysis.tags ? analysis.tags.join(', ') : ''}
                class="w-full bg-gray-700 text-white rounded-lg px-4 py-3 border border-gray-600 focus:border-blue-500 focus:outline-none"
                placeholder="drama, misterio, análisis, temporada final"
              />
            </div>

            <!-- Botones -->
            <div class="flex flex-col sm:flex-row gap-4 pt-6">
              <button
                type="submit"
                class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors"
              >
                Guardar Cambios
              </button>
              <button
                type="button"
                id="previewBtn"
                class="flex-1 bg-gray-600 hover:bg-gray-700 text-white px-6 py-3 rounded-lg font-medium transition-colors"
              >
                Vista Previa
              </button>
            </div>
          </form>
        </div>
      ) : null}
    </div>

    <!-- Loading overlay -->
    <div id="loadingOverlay" class="fixed inset-0 bg-black bg-opacity-50 items-center justify-center z-50 hidden">
      <div class="bg-white rounded-lg p-6 text-center">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
        <p class="text-gray-700">Guardando cambios...</p>
      </div>
    </div>

    <script is:inline>
      const form = document.getElementById('editAnalysisForm');
      const loadingOverlay = document.getElementById('loadingOverlay');
      const previewBtn = document.getElementById('previewBtn');

      if (form) {
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          
          const formData = new FormData(form);
          const analysisIdEl = document.getElementById('analysisId');
          const analysisId = analysisIdEl ? analysisIdEl.value : '';
          
          // Preparar datos
          const data = {
            id: analysisId,
            title: formData.get('title'),
            excerpt: formData.get('excerpt'),
            content: formData.get('content'),
            universe: formData.get('universe'),
            status: formData.get('status'),
            readTime: parseInt(formData.get('readTime')?.toString() || '5') || 5,
            author: {
              name: formData.get('authorName')?.toString() || 'Admin',
              avatar: formData.get('authorAvatar')?.toString() || ''
            },
            tags: formData.get('tags') ? formData.get('tags').toString().split(',').map(tag => tag.trim()).filter(tag => tag) : []
          };

          try {
            if (loadingOverlay) {
              loadingOverlay.classList.remove('hidden');
            }
            
            const response = await fetch('/api/analysis', {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(data)
            });

            if (response.ok) {
              const result = await response.json();
              if (result.success) {
                alert('Análisis actualizado exitosamente');
                window.location.href = '/admin/manage-analysis';
              } else {
                alert('Error actualizando análisis: ' + result.error);
              }
            } else {
              alert('Error de servidor');
            }
          } catch (error) {
            console.error('Error:', error);
            alert('Error actualizando análisis');
          } finally {
            if (loadingOverlay) {
              loadingOverlay.classList.add('hidden');
            }
          }
        });
      }

      // Vista previa
      if (previewBtn) {
        previewBtn.addEventListener('click', () => {
          const contentEl = document.getElementById('content');
          const titleEl = document.getElementById('title');
          
          const content = contentEl ? contentEl.value : '';
          const title = titleEl ? titleEl.value : '';
          
          // Abrir nueva ventana con vista previa
          const previewWindow = window.open('', '_blank', 'width=800,height=600');
          if (previewWindow) {
            previewWindow.document.write(`
              <!DOCTYPE html>
              <html>
              <head>
                <title>Vista Previa - ${title}</title>
                <style>
                  body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                  h1 { color: #333; }
                  .content { line-height: 1.6; }
                  strong { font-weight: bold; }
                  em { font-style: italic; }
                </style>
              </head>
              <body>
                <h1>${title}</h1>
                <div class="content">${content.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>').replace(/\*(.*?)\*/g, '<em>$1</em>').replace(/\n/g, '<br>')}</div>
              </body>
              </html>
            `);
            previewWindow.document.close();
          }
        });
      }
    </script>
  </body>
</html>
